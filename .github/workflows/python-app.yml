# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches:
    - master
    - main
    - dev
    - version/*
  pull_request:
    branches:
    - master
    - main
    - dev
    - version/*

jobs:
  build:
    runs-on: ubuntu-latest
    environment: pypi-env

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with python unittest
      run: |
        python -m unittest -v -b
    - name: Distribute to pypi test
      env:
        AEROSPIKE_TEST_PYPI_TOKEN: ${{ secrets.AEROSPIKE_TEST_PYPI_TOKEN }}
      if: ${{ github.event_name != 'pull_request' && !(github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') }}
      run: |
        echo ${#AEROSPIKE_TEST_PYPI_TOKEN}
        python -m build
        python -m twine upload --repository-url https://test.pypi.org/legacy/ -u __token__ -p $AEROSPIKE_TEST_PYPI_TOKEN dist/* --verbose
    - name: Distribute to official pypi
      env:
        AEROSPIKE_PYPI_TOKEN: ${{ secrets.AEROSPIKE_PYPI_TOKEN }}
      if: ${{ github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main') }}
      run: |
        python -m build
        python -m twine upload --repository-url https://upload.pypi.org/legacy/ -u __token__ -p $AEROSPIKE_PYPI_TOKEN dist/* --verbose
